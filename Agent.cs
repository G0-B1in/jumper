//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace попрыженок
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using System.Windows.Media;

    public partial class Agent
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Agent()
        {
            this.AgentPriorityHistory = new HashSet<AgentPriorityHistory>();
            this.ProductSale = new HashSet<ProductSale>();
            this.Shop = new HashSet<Shop>();
        }
    
        public int ID { get; set; }
        public string Title { get; set; }
        public int AgentTypeID { get; set; }
        public string Address { get; set; }
        public string INN { get; set; }
        public string KPP { get; set; }
        public string DirectorName { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Logo { get; set; }
        public int Priority { get; set; }

        public string NewLogo
        {
            get
            {
                if (Logo == "" | Logo == null)
                {
                    return "agents/picture.png";
                }
                else
                {
                    return Logo;
                }
            }
        }

        public int Discount
        {
            get
            {
                int salecount = ProductSale.Where(p => p.AgentID == ID).Sum(p => p.ProductCount);
                if(salecount < 10000)
                {
                    return 0;
                }
                else if(salecount < 50000)
                {
                    return 5;
                }
                else if(salecount < 150000)
                {
                    return 10;
                }
                else if(salecount < 500000)
                {
                    return 20;
                }
                else
                {
                    return 25;
                }
            }
        }

        public string SaleforLastYear
        {
            get
            {
                var salecount = ProductSale.Where(p => p.AgentID == ID).Sum(p => p.ProductCount);
                var years = ProductSale.Where(p => p.AgentID == ID).Select(p => p.SaleDate.Year);
                int lastyear;
                if(years != null)
                {
                    lastyear = DateTime.Now.Year;
                }
                else
                {
                    lastyear = years.LastOrDefault();
                }
                return $"{salecount} продаж за {lastyear} год";
            }
        }

        public SolidColorBrush DiscountColor
        {
            get
            {
                if (Discount >= 25) return Brushes.LightGreen;
                else return Brushes.White;
            }
        }

        public virtual AgentType AgentType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AgentPriorityHistory> AgentPriorityHistory { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProductSale> ProductSale { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Shop> Shop { get; set; }
    }
}
